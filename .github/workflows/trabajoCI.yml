name: CI Pipeline

on:
  push:
    branches:  
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    name: Despliegue en GitHub Pages
    needs: test
    steps:
      - name: Obtener c√≥digo fuente
        uses: actions/checkout@v2

      - name: Crear directorio de despliegue
        run: mkdir -p gh-pages

      - name: Copiar archivos de docs a gh-pages
        run: cp -r docs/* gh-pages/

      - name: Cargar Archivos Estaticos como artefacto
        uses: actions/upload-pages-artifact@v3

      - name: Desplegar en GitHub Pages
        if: always() && needs.test.result == 'success' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/DEV')
        id: deploy
        uses: actions/deploy-pages@v4
        with:
          github_token: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./gh-pages